pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
                bat 'echo "Build started: %BUILD_NUMBER%"'
            }
        }
        
        stage('Build Frontend') {
            steps {
                dir('frontend') {
                    bat 'npm install'
                    bat 'npm run build'
                }
            }
        }
        
        stage('Build Backend') {
            steps {
                dir('backend') {
                    bat 'npm install'
                }
            }
        }
        
        stage('Deploy') {
            steps {
                bat '''
                    docker-compose down || echo "No containers running"
                    docker-compose up -d
                    echo "Deployment completed! üöÄ"
                '''
            }
        }
        
        stage('Send Telegram Notification') {
            steps {
                script {
                    sendTelegramNotification("‚úÖ Build #${env.BUILD_NUMBER} completed successfully! Application deployed.", "success")
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
        success {
            bat 'echo "‚úÖ Build %BUILD_NUMBER% completed successfully!"'
        }
        failure {
            script {
                sendTelegramNotification("‚ùå Build #${env.BUILD_NUMBER} failed! Check Jenkins logs.", "failure")
            }
            bat 'echo "‚ùå Build %BUILD_NUMBER% failed!"'
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ curl.exe
def sendTelegramNotification(message, status) {
    def emoji = status == "success" ? "‚úÖ" : "‚ùå"
    def fullMessage = """
${emoji} <b>Calculator App CI/CD</b>

${message}

üìÅ <b>Project:</b> ${env.JOB_NAME}
üî® <b>Build:</b> #${env.BUILD_NUMBER}
üåø <b>Branch:</b> ${env.GIT_BRANCH}
üïê <b>Time:</b> ${new Date().format("yyyy-MM-dd HH:mm:ss")}
    """.trim()
    
    echo "Attempting to send Telegram notification: ${message}"
    
    try {
        withCredentials([
            string(credentialsId: 'telegram-bot-token', variable: 'BOT_TOKEN'),
            string(credentialsId: 'telegram-chat-id', variable: 'CHAT_ID')
        ]) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º curl.exe –¥–ª—è Windows
            bat """
                curl.exe -s -X POST "https://api.telegram.org/bot%BOT_TOKEN%/sendMessage" ^
                  -d "chat_id=%CHAT_ID%" ^
                  -d "text=${fullMessage}" ^
                  -d "parse_mode=HTML" ^
                  || echo "Telegram notification failed - check credentials or network"
            """
        }
    } catch (Exception e) {
        echo "Telegram notification error: ${e.message}"
    }
}